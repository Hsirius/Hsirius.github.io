<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-27T08:35:12.585Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>sai lei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>react-redux</title>
    <link href="http://yoursite.com/2020/07/27/react-redux/"/>
    <id>http://yoursite.com/2020/07/27/react-redux/</id>
    <published>2020-07-27T07:31:22.000Z</published>
    <updated>2020-07-27T08:35:12.585Z</updated>
    
    <content type="html"><![CDATA[<p>react-redux 其实就是提供一个组件<Provider>，整个 app 通过 connect 方法链接组件和 redux store</p><Provider store>store即为整个app的state仓库根组件应该嵌套在<Provider>中才能使用connect方法<p>connect(mapStateToProps, mapDispatchToProps, mergeProps, options)</p><p>mapStateToProps(state, ownProps): stateProps (Function)<br>state 表示 redux store 中的存值<br>ownProps 表示该组件接收的值<TestComponent value={true} /> 此组件即为 ownProps.value<br>example：<br>const mapStateToProps = state =&gt;{<br>  return {<br>    someVal: state.someVal<br>  }<br>}<br>1.如果定义该参数，组件将会监听 redux store 的变化，只有 store 发生变化，mapStateToProps 函数就会被调用<br>2.如果省略这个参数，组件相应的也不会监听 store 的变化<br>3.该函数必须返回一个纯对象，该对象会与当前组件的 props 合并<br>4.如果定义ownProps，只要组件接收新的props，mapStateToProps 函数就会被调用 </p><p>mapDispatchToProps(dispatch, ownProps): dispatchProps (Object or Function)<br>example:<br>const mapDispatchToProps = {<br>  someAction<br>}<br>or:<br>const mapDispatchToProps = dispatch =&gt; {<br>  return {<br>    someFunction: (someArguments) =&gt; {<br>      dispatch(someAction(someArguments))<br>    }<br>  }<br>}<br>1.如果是一个Object,那么obj中的每个值，都会被当作action中的方法<br>2.如果是一个Function,接收一个dispatch，返回一个对象<br>3.如果忽略此参数，默认dispatch会注入到当前组件props中<br>4.如果定义ownProps，同mapStateToProps</p><p>mergeProps(stateProps, dispatchProps, ownProps): props (Function)<br>example:<br>const mergeProps = (stateProps, dispatchProps, ownProps) =&gt; {<br>  return Object.assign({}, ownProps, {someProps: someMethodFilterState})<br>}<br>其实就是合并各种state，dispatch到props中<br>1。如果指定该参数，mapStateToProps，mapDispatchToProps的执行结果和当前组件自身的props将传入到此回调函数中，该回调函数返回的对象将作为props传到该组件中</p><p>options （Object）<br>pure = true   default true<br>如果当前组件不依赖于任何的输入而只依赖于props和redux store中的state，即纯组件，那么将会执行shouldComponentUpdate，浅对比mergeProps的结果，避免不必要的更新<br>withRef = false   default false<br>如果为true，会保存一个当前组件实例的引用，该引用通过getWrappedInstance()方法获得</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;react-redux 其实就是提供一个组件&lt;Provider&gt;，整个 app 通过 connect 方法链接组件和 redux store&lt;/p&gt;
&lt;Provider store&gt;
store即为整个app的state仓库
根组件应该嵌套在&lt;Provider&gt;中才能使用c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>开发一个import插件吧</title>
    <link href="http://yoursite.com/2020/07/18/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAimport%E6%8F%92%E4%BB%B6%E5%90%A7/"/>
    <id>http://yoursite.com/2020/07/18/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAimport%E6%8F%92%E4%BB%B6%E5%90%A7/</id>
    <published>2020-07-18T08:52:46.000Z</published>
    <updated>2020-07-18T09:06:31.471Z</updated>
    
    <content type="html"><![CDATA[<pre><code>首先第一件事，先按照官方程序走两步：https://code.visualstudio.com/api/get-started/your-first-extension。当执行到code ./helloworld 时如果报错 command not found：code 说明没有添加code到path中，详见以下步骤：1。打开vscode 快捷键shift+command+p 后输入shell2。选择 Install ‘code’ command in PATH</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;首先第一件事，先按照官方程序走两步：https://code.visualstudio.com/api/get-started/your-first-extension。
当执行到code ./helloworld 时如果报错 command not fou
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/07/17/hello-world/"/>
    <id>http://yoursite.com/2020/07/17/hello-world/</id>
    <published>2020-07-17T01:47:14.671Z</published>
    <updated>2020-07-17T01:47:14.671Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
